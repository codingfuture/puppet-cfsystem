#
# Copyright 2017-2019 (c) Andrey Galkin
#

define cfsystem::sshdir(
    String[1]
        $user = $title,
) {
    $home = getparam(User[$user], 'home')
    $group = pick(getparam(User[$user], 'gid'), $user)
    $ssh_dir = "${home}/.ssh"
    $persist_title = "keys:${title}"

    if !$home or $home == '' {
        fail("User ${user} must be defined with explicit 'home' parameter")
    }

    if getparam(User[$user], 'purge_ssh_keys') != true {
        fail("User ${user} must be defined with purge_ssh_keys=true")
    }

    User[$user]
    -> file { $ssh_dir:
        ensure => directory,
        owner  => $user,
        group  => $group,
        mode   => '0700',
    }
    -> file { "${ssh_dir}/config":
        owner   => $user,
        group   => $group,
        mode    => '0600',
        content => [
            '# Generated by CodingFuture cfsystem Puppet Module',
            '# DO NOT EDIT',
            'StrictHostKeyChecking no',
            'ConnectTimeout 5',
            'Include config_*',
        ].join("\n")
    }
    -> file { "${ssh_dir}/config_dummy":
        owner   => $user,
        group   => $group,
        mode    => '0600',
        content => '',
    }
}
